{"version":3,"sources":["webpack:///./src/pages/resizable.js"],"names":["CoverExample","state","forceFallback","remeasureOnWindowResize","isResizing","resizeNotifier","render","_cx","_this2","this","videoOptions","src","ref","videoRef","onClick","paused","play","pause","title","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_Page__WEBPACK_IMPORTED_MODULE_4__","className","css","ResizableExample","Input","type","checked","setState","cx","RefreshIcon","active","setTimeout","_components_Icons__WEBPACK_IMPORTED_MODULE_7__","react_simple_resize__WEBPACK_IMPORTED_MODULE_3___default","ResizableBox","handleColor","style","overflow","width","height","_dist_lib__WEBPACK_IMPORTED_MODULE_5___default","onFallbackDidMount","onFallbackWillUnmount","Component"],"mappings":"+NAUMA,sJAEJC,MAAQ,CACNC,eAAe,EACfC,yBAAyB,EACzBC,YAAY,KAGdC,eAAiB,2CAEjBC,OAAA,WAAS,IAAAC,EAAAC,EAAAC,KACDC,EAAe,CACnBC,IAAK,qFACLC,IAAK,SAAAC,GACHL,EAAKK,SAAWA,GAElBC,QAAS,WACHN,EAAKK,UAAYL,EAAKK,SAASE,OACjCP,EAAKK,SAASG,OACLR,EAAKK,UACdL,EAAKK,SAASI,SAGlBC,MAAO,uBAGT,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAAA,OAAKE,UAAWC,IAAIC,kBAClBN,EAAAC,EAAAC,cAAA,OAAKE,UAAWC,IAAIE,OAClBP,EAAAC,EAAAC,cAAA,SACEM,KAAK,WACLC,QAASnB,KAAKR,MAAMC,cACpBY,QAAS,WACPN,EAAKqB,SAAS,CACZ3B,eAAgBM,EAAKP,MAAMC,mBAIjCiB,EAAAC,EAAAC,cAAA,qDAEFF,EAAAC,EAAAC,cAAA,OAAKE,UAAWC,IAAIE,OAClBP,EAAAC,EAAAC,cAAA,SACEM,KAAK,WACLC,QAASnB,KAAKR,MAAME,wBACpBW,QAAS,WACPN,EAAKqB,SAAS,CACZ1B,yBAA0BK,EAAKP,MAAME,6BAI3CgB,EAAAC,EAAAC,cAAA,2CAEFF,EAAAC,EAAAC,cAAA,OAAKE,UAAWC,IAAIE,OAClBP,EAAAC,EAAAC,cAAA,OACEE,UAAWO,IAAGN,IAAIO,aAALxB,EAAA,GAAAA,EACViB,IAAIQ,QAASvB,KAAKR,MAAMG,WADdG,IAGbO,QAAS,WAEPN,EAAKqB,SAAS,CAAEzB,YAAY,IAI5B6B,WAAW,kBAAMzB,EAAKqB,SAAS,CAAEzB,YAAY,KAAU,KACvDI,EAAKH,mBAGPc,EAAAC,EAAAC,cAACa,EAAA,EAAD,OAEFf,EAAAC,EAAAC,cAAA,sKAKFF,EAAAC,EAAAC,cAAA,qEAGAF,EAAAC,EAAAC,cAACc,EAAAf,EAAD,CAAQG,UAAWC,IAAIY,aAAcC,YAAY,WAC/ClB,EAAAC,EAAAC,cAAA,OACEiB,MAAO,CACLC,SAAU,SACVC,MAAO,OACPC,OAAQ,SAGVtB,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,CACEV,aAAcA,EACdR,cAAeO,KAAKR,MAAMC,cAC1BC,wBAAyBM,KAAKR,MAAME,wBACpCwC,mBAAoB,SAAAtC,GAClBG,EAAKH,eAAiBA,GAExBuC,sBAAuB,WACrBpC,EAAKH,eAAiB,wBA9FbwC,aA0GZ7C","file":"component---src-pages-resizable-js-588ee1f0b70872e3f311.js","sourcesContent":["import React, { Component } from 'react';\nimport cx from 'classnames';\nimport Resize from 'react-simple-resize';\nimport Page from '../components/Page';\n\n// import Cover from 'react-video-cover';\nimport Cover from '../../../dist/lib';\nimport css from './styles.module.css';\nimport { RefreshIcon } from '../components/Icons';\n\nclass CoverExample extends Component {\n\n  state = {\n    forceFallback: false,\n    remeasureOnWindowResize: false,\n    isResizing: false,\n  };\n\n  resizeNotifier = () => {};\n\n  render() {\n    const videoOptions = {\n      src: 'http://download.blender.org/peach/bigbuckbunny_movies/BigBuckBunny_320x180.mp4#t=5',\n      ref: videoRef => {\n        this.videoRef = videoRef;\n      },\n      onClick: () => {\n        if (this.videoRef && this.videoRef.paused) {\n          this.videoRef.play();\n        } else if (this.videoRef) {\n          this.videoRef.pause();\n        }\n      },\n      title: 'click to play/pause',\n    };\n\n    return (\n      <Page>\n        <div className={css.ResizableExample}>\n          <div className={css.Input}>\n            <input\n              type=\"checkbox\"\n              checked={this.state.forceFallback}\n              onClick={() => {\n                this.setState({\n                  forceFallback: !this.state.forceFallback,\n                });\n              }}\n            />\n            <span>Force IE-Fallback in non-IE Browsers</span>\n          </div>\n          <div className={css.Input}>\n            <input\n              type=\"checkbox\"\n              checked={this.state.remeasureOnWindowResize}\n              onClick={() => {\n                this.setState({\n                  remeasureOnWindowResize: !this.state.remeasureOnWindowResize,\n                });\n              }}\n            />\n            <span>Remeasure on window resize</span>\n          </div>\n          <div className={css.Input}>\n            <div\n              className={cx(css.RefreshIcon, {\n                [css.active]: this.state.isResizing,\n              })}\n              onClick={() => {\n                // isResizing will set 'active' classname, which starts rotate-animation\n                this.setState({ isResizing: true });\n                // then reset classname after animation has ended\n                // i know, this is not great but it works pretty good\n                // TODO: use animationend event\n                setTimeout(() => this.setState({ isResizing: false }), 400);\n                this.resizeNotifier();\n              }}\n            >\n              <RefreshIcon />\n            </div>\n            <span>\n              When using the IE-Fallback click this button to notify that a resize has happened.\n              Without the IE Fallback this is not necessary and will do nothing.\n            </span>\n          </div>\n          <div>\n            The box below is resizable on the bottom right corner.\n          </div>\n          <Resize className={css.ResizableBox} handleColor=\"#50514F\">\n            <div\n              style={{\n                overflow: 'hidden',\n                width: '100%',\n                height: '100%',\n              }}\n            >\n              <Cover\n                videoOptions={videoOptions}\n                forceFallback={this.state.forceFallback}\n                remeasureOnWindowResize={this.state.remeasureOnWindowResize}\n                onFallbackDidMount={resizeNotifier => {\n                  this.resizeNotifier = resizeNotifier;\n                }}\n                onFallbackWillUnmount={() => {\n                  this.resizeNotifier = () => {};\n                }}\n              />\n            </div>\n\n          </Resize>\n        </div>\n      </Page>\n    );\n  }\n}\n\nexport default CoverExample;\n"],"sourceRoot":""}